extends layout

mixin interactionContainer(item, hasLiked)
  div.like-buttons-container
    form(onsubmit=`handleLikeSubmit(event, '${item._id}')`, action=hasLiked ? "/unlike" : "/like", method="post")
      button(type='submit' class="like-buttons like" name="tweetId" value= item._id)
        i(class=[hasLiked ? "fas fa-heart" : "far fa-heart"])
        span.tweet-like-count
          - const likeCount = item.likedUsers.length || 0;
          if (likeCount > 0)
            | #{likeCount}
      input(type="hidden" name="reqUsername" value= item.tweetOwner)

mixin followButton(username, isFollowing)
  form(action=isFollowing ? "/unfollow" : "/follow", method="post")
    button(type='submit' class=["follow-button", isFollowing ? "unfollow" : "following"])
      | #{isFollowing ? 'Unfollow' : 'Follow'}
    input(type="hidden" name="reqFollowButton" value= username)

block content
  head
    meta(charset='UTF-8')
    meta(http-equiv='X-UA-Compatible' content='IE=edge')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css')
    title #{user.username}
    script.
      document.addEventListener('DOMContentLoaded', () => {
        const redirectToFollowList = (username, type) => {
          window.location.href = `/${username}/${type}`;
        }

        const followersButton = document.querySelector('.followers-button');
        const followingButton = document.querySelector('.following-button');

        followersButton.addEventListener('click', (event) => {
          event.stopPropagation();
          const username = '#{user.username}';
          redirectToFollowList(username, 'followers');
        });

        followingButton.addEventListener('click', (event) => {
          event.stopPropagation();
          const username = '#{user.username}';
          redirectToFollowList(username, 'following');
        });

        const userProfiles = document.querySelectorAll('.user-profile');

        userProfiles.forEach((userProfile) => {
          const username = userProfile.innerText.trim();
          userProfile.dataset.username = username;

          userProfile.addEventListener('click', () => {
            const username = userProfile.dataset.username;
            redirectToProfile(username);
          });

          const match = username.match(/'([^']*)'/);
          if (match) userProfile.innerText = match[1];
        });

        const resizeTextarea = () => {
          const textarea = document.getElementById("tweetInput");
          textarea.style.height = "auto";
          textarea.style.height = `${textarea.scrollHeight}px`;
        }

        resizeTextarea();

        document.getElementById("tweetInput").addEventListener('input', resizeTextarea);
      });

  div.container.profile-header
    div.profile-info
      h1= user.username
      +followButton(user.username, user.followers.some(follower => follower.user === username))

    div.followers-following-buttons
      a(href='#' class='followers-button')= user.followers.length + ' Followers'
      a(href='#' class='following-button')= user.following.length + ' Following

  div.tweet-list-container
    ul.tweet-list
      each item in currentPageUserTweets.tweets
        div.tweet-container.own-profile-tweet-container
          span.tweet-owner= item.tweetOwner
          li.tweet-text= item.tweet
          +interactionContainer(item, item.likedUsers.includes(username))
              
  div.logout-div
    div.back-to-home
      a(href='/') 
        i(class="fas fa-home")
    form(action='/logout?_method=DELETE' method='POST')
      button(type='submit' class="logout-button")
        i(class="fa fa-sign-out")
